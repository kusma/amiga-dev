==id $Id: graphics_lib.sfd 40.2 1998/06/06 12:43:53 olsen Exp olsen $
==base _GfxBase
==basetype struct GfxBase *
==libname graphics.library
==bias 30
==public
==include <graphics/gfx.h>
==include <graphics/displayinfo.h>
==include <graphics/gels.h>
==include <graphics/rastport.h>
==include <graphics/view.h>
==include <graphics/copper.h>
==include <graphics/clip.h>
==include <graphics/regions.h>
==include <graphics/sprite.h>
==include <graphics/text.h>
==include <graphics/scale.h>
==include <hardware/blit.h>
LONG BltBitMap(const struct BitMap * srcBitMap, WORD xSrc, WORD ySrc,
	struct BitMap * destBitMap, WORD xDest, WORD yDest, WORD xSize,
	WORD ySize, UBYTE minterm, UBYTE mask, PLANEPTR tempA) (a0,d0,d1,a1,d2,d3,d4,d5,d6,d7,a2)
VOID BltTemplate(const PLANEPTR source, WORD xSrc, WORD srcMod, struct RastPort * destRP,
	WORD xDest, WORD yDest, WORD xSize, WORD ySize) (a0,d0,d1,a1,d2,d3,d4,d5)
VOID ClearEOL(struct RastPort * rp) (a1)
VOID ClearScreen(struct RastPort * rp) (a1)
WORD TextLength(struct RastPort * rp, CONST_STRPTR string, UWORD count) (a1,a0,d0)
LONG Text(struct RastPort * rp, CONST_STRPTR string, UWORD count) (a1,a0,d0)
LONG SetFont(struct RastPort * rp, const struct TextFont * textFont) (a1,a0)
struct TextFont * OpenFont(struct TextAttr * textAttr) (a0)
VOID CloseFont(struct TextFont * textFont) (a1)
ULONG AskSoftStyle(struct RastPort * rp) (a1)
ULONG SetSoftStyle(struct RastPort * rp, ULONG style, ULONG enable) (a1,d0,d1)
VOID AddBob(struct Bob * bob, struct RastPort * rp) (a0,a1)
VOID AddVSprite(struct VSprite * vSprite, struct RastPort * rp) (a0,a1)
VOID DoCollision(struct RastPort * rp) (a1)
VOID DrawGList(struct RastPort * rp, struct ViewPort * vp) (a1,a0)
VOID InitGels(struct VSprite * head, struct VSprite * tail,
	struct GelsInfo * gelsInfo) (a0,a1,a2)
VOID InitMasks(struct VSprite * vSprite) (a0)
VOID RemIBob(struct Bob * bob, struct RastPort * rp, struct ViewPort * vp) (a0,a1,a2)
VOID RemVSprite(struct VSprite * vSprite) (a0)
VOID SetCollision(ULONG num, VOID (*routine)(struct VSprite *gelA, struct VSprite *gelB),
	struct GelsInfo * gelsInfo) (d0,a0,a1)
VOID SortGList(struct RastPort * rp) (a1)
VOID AddAnimOb(struct AnimOb * anOb, struct AnimOb ** anKey, struct RastPort * rp) (a0,a1,a2)
VOID Animate(struct AnimOb ** anKey, struct RastPort * rp) (a0,a1)
BOOL GetGBuffers(struct AnimOb * anOb, struct RastPort * rp, BOOL flag) (a0,a1,d0)
VOID InitGMasks(struct AnimOb * anOb) (a0)
VOID DrawEllipse(struct RastPort * rp, WORD xCenter, WORD yCenter, WORD a, WORD b) (a1,d0,d1,d2,d3)
LONG AreaEllipse(struct RastPort * rp, WORD xCenter, WORD yCenter, WORD a, WORD b) (a1,d0,d1,d2,d3)
VOID LoadRGB4(struct ViewPort * vp, const UWORD * colors, WORD count) (a0,a1,d0)
VOID InitRastPort(struct RastPort * rp) (a1)
VOID InitVPort(struct ViewPort * vp) (a0)
ULONG MrgCop(struct View * view) (a1)
ULONG MakeVPort(struct View * view, struct ViewPort * vp) (a0,a1)
VOID LoadView(struct View * view) (a1)
VOID WaitBlit() ()
VOID SetRast(struct RastPort * rp, UBYTE pen) (a1,d0)
VOID Move(struct RastPort * rp, WORD x, WORD y) (a1,d0,d1)
VOID Draw(struct RastPort * rp, WORD x, WORD y) (a1,d0,d1)
LONG AreaMove(struct RastPort * rp, WORD x, WORD y) (a1,d0,d1)
LONG AreaDraw(struct RastPort * rp, WORD x, WORD y) (a1,d0,d1)
LONG AreaEnd(struct RastPort * rp) (a1)
VOID WaitTOF() ()
VOID QBlit(struct bltnode * blit) (a1)
VOID InitArea(struct AreaInfo * areaInfo, APTR vectorBuffer, WORD maxVectors) (a0,a1,d0)
VOID SetRGB4(struct ViewPort * vp, WORD index, UBYTE red, UBYTE green, UBYTE blue) (a0,d0,d1,d2,d3)
VOID QBSBlit(struct bltnode * blit) (a1)
VOID BltClear(PLANEPTR memBlock, ULONG byteCount, ULONG flags) (a1,d0,d1)
VOID RectFill(struct RastPort * rp, WORD xMin, WORD yMin, WORD xMax, WORD yMax) (a1,d0,d1,d2,d3)
VOID BltPattern(struct RastPort * rp, const PLANEPTR mask, WORD xMin, WORD yMin,
	WORD xMax, WORD yMax, UWORD maskBPR) (a1,a0,d0,d1,d2,d3,d4)
ULONG ReadPixel(struct RastPort * rp, WORD x, WORD y) (a1,d0,d1)
LONG WritePixel(struct RastPort * rp, WORD x, WORD y) (a1,d0,d1)
BOOL Flood(struct RastPort * rp, ULONG mode, WORD x, WORD y) (a1,d2,d0,d1)
VOID PolyDraw(struct RastPort * rp, WORD count, const WORD * polyTable) (a1,d0,a0)
VOID SetAPen(struct RastPort * rp, UBYTE pen) (a1,d0)
VOID SetBPen(struct RastPort * rp, UBYTE pen) (a1,d0)
VOID SetDrMd(struct RastPort * rp, UBYTE drawMode) (a1,d0)
VOID InitView(struct View * view) (a1)
VOID CBump(struct UCopList * copList) (a1)
VOID CMove(struct UCopList * copList, APTR destination, WORD data) (a1,d0,d1)
VOID CWait(struct UCopList * copList, WORD v, WORD h) (a1,d0,d1)
LONG VBeamPos() ()
VOID InitBitMap(struct BitMap * bitMap, BYTE depth, WORD width, WORD height) (a0,d0,d1,d2)
VOID ScrollRaster(struct RastPort * rp, WORD dx, WORD dy, WORD xMin, WORD yMin, WORD xMax,
	WORD yMax) (a1,d0,d1,d2,d3,d4,d5)
VOID WaitBOVP(struct ViewPort * vp) (a0)
WORD GetSprite(struct SimpleSprite * sprite, WORD num) (a0,d0)
VOID FreeSprite(WORD num) (d0)
VOID ChangeSprite(struct ViewPort * vp, struct SimpleSprite * sprite, UWORD * newData) (a0,a1,a2)
VOID MoveSprite(struct ViewPort * vp, struct SimpleSprite * sprite, WORD x, WORD y) (a0,a1,d0,d1)
VOID LockLayerRom(struct Layer * layer) (a5)
VOID UnlockLayerRom(struct Layer * layer) (a5)
VOID SyncSBitMap(struct Layer * layer) (a0)
VOID CopySBitMap(struct Layer * layer) (a0)
VOID OwnBlitter() ()
VOID DisownBlitter() ()
struct TmpRas * InitTmpRas(struct TmpRas * tmpRas, PLANEPTR buffer, LONG size) (a0,a1,d0)
VOID AskFont(struct RastPort * rp, struct TextAttr * textAttr) (a1,a0)
VOID AddFont(struct TextFont * textFont) (a1)
VOID RemFont(struct TextFont * textFont) (a1)
PLANEPTR AllocRaster(UWORD width, UWORD height) (d0,d1)
VOID FreeRaster(PLANEPTR p, UWORD width, UWORD height) (a0,d0,d1)
VOID AndRectRegion(struct Region * region, const struct Rectangle * rectangle) (a0,a1)
BOOL OrRectRegion(struct Region * region, const struct Rectangle * rectangle) (a0,a1)
struct Region * NewRegion() ()
BOOL ClearRectRegion(struct Region * region, const struct Rectangle * rectangle) (a0,a1)
VOID ClearRegion(struct Region * region) (a0)
VOID DisposeRegion(struct Region * region) (a0)
VOID FreeVPortCopLists(struct ViewPort * vp) (a0)
VOID FreeCopList(struct CopList * copList) (a0)
VOID ClipBlit(struct RastPort * srcRP, WORD xSrc, WORD ySrc, struct RastPort * destRP,
	WORD xDest, WORD yDest, WORD xSize, WORD ySize, UBYTE minterm) (a0,d0,d1,a1,d2,d3,d4,d5,d6)
BOOL XorRectRegion(struct Region * region, const struct Rectangle * rectangle) (a0,a1)
VOID FreeCprList(struct cprlist * cprList) (a0)
struct ColorMap * GetColorMap(LONG entries) (d0)
VOID FreeColorMap(struct ColorMap * colorMap) (a0)
ULONG GetRGB4(struct ColorMap * colorMap, LONG entry) (a0,d0)
VOID ScrollVPort(struct ViewPort * vp) (a0)
struct CopList * UCopperListInit(struct UCopList * uCopList, WORD n) (a0,d0)
VOID FreeGBuffers(struct AnimOb * anOb, struct RastPort * rp, BOOL flag) (a0,a1,d0)
VOID BltBitMapRastPort(const struct BitMap * srcBitMap, WORD xSrc, WORD ySrc,
	struct RastPort * destRP, WORD xDest, WORD yDest, WORD xSize,
	WORD ySize, UBYTE minterm) (a0,d0,d1,a1,d2,d3,d4,d5,d6)
BOOL OrRegionRegion(const struct Region * srcRegion, struct Region * destRegion) (a0,a1)
BOOL XorRegionRegion(const struct Region * srcRegion, struct Region * destRegion) (a0,a1)
BOOL AndRegionRegion(const struct Region * srcRegion, struct Region * destRegion) (a0,a1)
VOID SetRGB4CM(struct ColorMap * colorMap, WORD index, UBYTE red, UBYTE green,
	UBYTE blue) (a0,d0,d1,d2,d3)
VOID BltMaskBitMapRastPort(const struct BitMap * srcBitMap, WORD xSrc, WORD ySrc,
	struct RastPort * destRP, WORD xDest, WORD yDest, WORD xSize,
	WORD ySize, UBYTE minterm, const PLANEPTR bltMask) (a0,d0,d1,a1,d2,d3,d4,d5,d6,a2)
==reserve 2
BOOL AttemptLockLayerRom(struct Layer * layer) (a5)
==version 36
APTR GfxNew(ULONG gfxNodeType) (d0)
VOID GfxFree(APTR gfxNodePtr) (a0)
VOID GfxAssociate(const APTR associateNode, APTR gfxNodePtr) (a0,a1)
VOID BitMapScale(struct BitScaleArgs * bitScaleArgs) (a0)
UWORD ScalerDiv(UWORD factor, UWORD numerator, UWORD denominator) (d0,d1,d2)
WORD TextExtent(struct RastPort * rp, CONST_STRPTR string, WORD count,
	struct TextExtent * textExtent) (a1,a0,d0,a2)
ULONG TextFit(struct RastPort * rp, CONST_STRPTR string, UWORD strLen,
	const struct TextExtent * textExtent,
	const struct TextExtent * constrainingExtent, WORD strDirection,
	UWORD constrainingBitWidth, UWORD constrainingBitHeight) (a1,a0,d0,a2,a3,d1,d2,d3)
APTR GfxLookUp(const APTR associateNode) (a0)
BOOL VideoControl(struct ColorMap * colorMap, struct TagItem * tagarray) (a0,a1)
==varargs
BOOL VideoControlTags(struct ColorMap * colorMap, ULONG tagarray, ...) (a0,a1)
struct MonitorSpec * OpenMonitor(CONST_STRPTR monitorName, ULONG displayID) (a1,d0)
BOOL CloseMonitor(struct MonitorSpec * monitorSpec) (a0)
DisplayInfoHandle FindDisplayInfo(ULONG displayID) (d0)
ULONG NextDisplayInfo(ULONG displayID) (d0)
==reserve 3
ULONG GetDisplayInfoData(const DisplayInfoHandle handle, APTR buf, ULONG size, ULONG tagID,
	ULONG displayID) (a0,a1,d0,d1,d2)
VOID FontExtent(const struct TextFont * font, struct TextExtent * fontExtent) (a0,a1)
LONG ReadPixelLine8(struct RastPort * rp, UWORD xstart, UWORD ystart, UWORD width,
	UBYTE * array, struct RastPort * tempRP) (a0,d0,d1,d2,a2,a1)
LONG WritePixelLine8(struct RastPort * rp, UWORD xstart, UWORD ystart, UWORD width,
	UBYTE * array, struct RastPort * tempRP) (a0,d0,d1,d2,a2,a1)
LONG ReadPixelArray8(struct RastPort * rp, UWORD xstart, UWORD ystart, UWORD xstop,
	UWORD ystop, UBYTE * array, struct RastPort * temprp) (a0,d0,d1,d2,d3,a2,a1)
LONG WritePixelArray8(struct RastPort * rp, UWORD xstart, UWORD ystart, UWORD xstop,
	UWORD ystop, UBYTE * array, struct RastPort * temprp) (a0,d0,d1,d2,d3,a2,a1)
LONG GetVPModeID(const struct ViewPort * vp) (a0)
LONG ModeNotAvailable(ULONG modeID) (d0)
==reserve 1
VOID EraseRect(struct RastPort * rp, WORD xMin, WORD yMin, WORD xMax, WORD yMax) (a1,d0,d1,d2,d3)
ULONG ExtendFont(struct TextFont * font, const struct TagItem * fontTags) (a0,a1)
==varargs
ULONG ExtendFontTags(struct TextFont * font, ULONG fontTags, ...) (a0,a1)
VOID StripFont(struct TextFont * font) (a0)
==version 39
UWORD CalcIVG(struct View * v, struct ViewPort * vp) (a0,a1)
LONG AttachPalExtra(struct ColorMap * cm, struct ViewPort * vp) (a0,a1)
LONG ObtainBestPenA(struct ColorMap * cm, ULONG r, ULONG g, ULONG b,
	const struct TagItem * tags) (a0,d1,d2,d3,a1)
==varargs
LONG ObtainBestPen(struct ColorMap * cm, ULONG r, ULONG g, ULONG b, ULONG tags, ...) (a0,d1,d2,d3,a1)
==reserve 1
VOID SetRGB32(struct ViewPort * vp, ULONG n, ULONG r, ULONG g, ULONG b) (a0,d0,d1,d2,d3)
ULONG GetAPen(struct RastPort * rp) (a0)
ULONG GetBPen(struct RastPort * rp) (a0)
ULONG GetDrMd(struct RastPort * rp) (a0)
ULONG GetOutlinePen(struct RastPort * rp) (a0)
VOID LoadRGB32(struct ViewPort * vp, const ULONG * table) (a0,a1)
ULONG SetChipRev(ULONG want) (d0)
VOID SetABPenDrMd(struct RastPort * rp, ULONG apen, ULONG bpen, ULONG drawmode) (a1,d0,d1,d2)
VOID GetRGB32(const struct ColorMap * cm, ULONG firstcolor, ULONG ncolors,
	ULONG * table) (a0,d0,d1,a1)
==reserve 2
struct BitMap * AllocBitMap(ULONG sizex, ULONG sizey, ULONG depth, ULONG flags,
	const struct BitMap * friend_bitmap) (d0,d1,d2,d3,a0)
VOID FreeBitMap(struct BitMap * bm) (a0)
LONG GetExtSpriteA(struct ExtSprite * ss, const struct TagItem * tags) (a2,a1)
==varargs
LONG GetExtSprite(struct ExtSprite * ss, ULONG tags, ...) (a2,a1)
ULONG CoerceMode(struct ViewPort * vp, ULONG monitorid, ULONG flags) (a0,d0,d1)
VOID ChangeVPBitMap(struct ViewPort * vp, struct BitMap * bm, struct DBufInfo * db) (a0,a1,a2)
VOID ReleasePen(struct ColorMap * cm, ULONG n) (a0,d0)
ULONG ObtainPen(struct ColorMap * cm, ULONG n, ULONG r, ULONG g, ULONG b, LONG f) (a0,d0,d1,d2,d3,d4)
ULONG GetBitMapAttr(const struct BitMap * bm, ULONG attrnum) (a0,d1)
struct DBufInfo * AllocDBufInfo(struct ViewPort * vp) (a0)
VOID FreeDBufInfo(struct DBufInfo * dbi) (a1)
ULONG SetOutlinePen(struct RastPort * rp, ULONG pen) (a0,d0)
ULONG SetWriteMask(struct RastPort * rp, ULONG msk) (a0,d0)
VOID SetMaxPen(struct RastPort * rp, ULONG maxpen) (a0,d0)
VOID SetRGB32CM(struct ColorMap * cm, ULONG n, ULONG r, ULONG g, ULONG b) (a0,d0,d1,d2,d3)
VOID ScrollRasterBF(struct RastPort * rp, WORD dx, WORD dy, WORD xMin, WORD yMin, WORD xMax,
	WORD yMax) (a1,d0,d1,d2,d3,d4,d5)
LONG FindColor(struct ColorMap * cm, ULONG r, ULONG g, ULONG b, LONG maxcolor) (a3,d1,d2,d3,d4)
==reserve 1
struct ExtSprite * AllocSpriteDataA(const struct BitMap * bm, const struct TagItem * tags) (a2,a1)
==varargs
struct ExtSprite * AllocSpriteData(const struct BitMap * bm, ULONG tags, ...) (a2,a1)
LONG ChangeExtSpriteA(struct ViewPort * vp, struct ExtSprite * oldsprite,
	struct ExtSprite * newsprite, const struct TagItem * tags) (a0,a1,a2,a3)
==varargs
LONG ChangeExtSprite(struct ViewPort * vp, struct ExtSprite * oldsprite,
	struct ExtSprite * newsprite, ULONG tags, ...) (a0,a1,a2,a3)
VOID FreeSpriteData(struct ExtSprite * sp) (a2)
VOID SetRPAttrsA(struct RastPort * rp, const struct TagItem * tags) (a0,a1)
==varargs
VOID SetRPAttrs(struct RastPort * rp, ULONG tags, ...) (a0,a1)
VOID GetRPAttrsA(const struct RastPort * rp, const struct TagItem * tags) (a0,a1)
==varargs
VOID GetRPAttrs(const struct RastPort * rp, ULONG tags, ...) (a0,a1)
ULONG BestModeIDA(const struct TagItem * tags) (a0)
==varargs
ULONG BestModeID(ULONG tags, ...) (a0)
==version 40
VOID WriteChunkyPixels(struct RastPort * rp, UWORD xstart, UWORD ystart, UWORD xstop,
	UWORD ystop, const UBYTE * array, LONG bytesperrow) (a0,d0,d1,d2,d3,a2,d4)
==end
